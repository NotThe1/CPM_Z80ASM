;**************************************************************************
;
; File Name             : MyLib1.LIB
; Author                : Frank Martyn
; Creation Date         : 2019-11-12
;
; Assembler Name        : ZMAC v 1.7
; Linker                : ZML  v 2.0
;
; Amendment Record
; *****************
; Name          Date            Details of Amendment
; ----          ----            ---------------------
;
; Frank Martyn  2019-12-21     Prt$,Con00,   removed PrtAcc
; Frank Martyn  2019-12-18     ConNL
; Frank Martyn  2019-12-14     PrtNL,PrtAcc
; Frank Martyn  2019-12-13     Prt00,PrtNLT
; Frank Martyn  2019-11-14     Initial edit
;
;
; Module Function
; ***************
;       Library of Subroutine Utilities

;   PrtNL Prints a New Line.
;     The registers are not saved

;   Prt00 Prints a null terminated string pointed at by DE
;     The registers are not saved

;   Prt$ Display a '$' terminated string pointed at by DE on the List device
;     The registers are not saved

;   ConNL Display New Line on Console.
;     The registers are not saved

;   Con00 Display a null terminated string pointed at by DE on the console
;     The registers are not saved

;   CmpStr - Compares two equal length strings
;     The inputs are
;       String A pointed at by REG DE
;       String B pointed at by REG HL
;    String length in Reg B. if 00 the string is 256 bytes long
;     The output is
;       String A = String B,  Acc = 0, ZFlag Set
;       String A < String B,  Acc < 0, Sign Flag Set, ZFlag Reset
;       String A > String B,  Acc > 0, Sign Flag Reset, ZFlag Reset
;     The registers are not saved
;

             NAME       MyLib1

;      ===============
;      Global symbols.
;      ===============

             PUBLIC     Prt00,Prt$,PrtNL
             PUBLIC     Con00,ConNL
             PUBLIC     CmpStr

;      n o n e

;      ===================
;      External References
;      ===================

;


;      ==============
;      External Files
;      ==============

;      =============
;      Local Equates
;      =============

NULL         EQU        00                   ; 00H
CR           EQU        0DH                  ; Carriage Return
LF           EQU        0AH                  ; New Line
DOLLAR       EQU        '$'                  ; Dollar

BDOS         EQU        0005H                ; Dos entry
LstOut       EQU        05H                  ; List Out
ConOut       EQU        02H                  ; Console Out
;**************************************************************************



Prt00:
             LD         BC,255               ; limit output
             EX         DE,HL

Prt00A:
             LD         E,(HL)               ; Char to print
             LD         A,NULL               ; terminator
             CPI                             ; at terminator ?
             RET        Z                    ; done if yes
             RET        PO                   ; done if exceed max size


             PUSH       HL
             PUSH       BC                   ; save parameters
             LD         C,LstOut
             CALL       BDOS                 ; Send to console
             POP        BC
             POP        HL

             JR         Prt00A               ; loop for more
;=============================

Prt$:
             LD         BC,255               ; limit output
             EX         DE,HL

Prt$0:
             LD         E,(HL)               ; Char to print
             LD         A,DOLLAR             ; terminator
             CPI                             ; at terminator ?
             RET        Z                    ; done if yes
             RET        PO                   ; done if exceed max size


             PUSH       HL
             PUSH       BC                   ; save parameters
             LD         C,LstOut
             CALL       BDOS                 ; Send to console
             POP        BC
             POP        HL

             JR         Prt$0                ; loop for more
;=============================

PrtNL:
             LD         E,CR
             LD         C,LstOut             ; Sys call number list out
             CALL       BDOS                 ; output the New Line

             LD         E,LF
             LD         C,LstOut             ; Sys call number list out
             CALL       BDOS                 ; output the New Line
             RET
;=============================


ConNL:
             LD         E,CR
             LD         C,ConOut             ; Sys call number list out
             CALL       BDOS                 ; output the New Line

             LD         E,LF
             LD         C,ConOut             ; Sys call number list out
             CALL       BDOS                 ; output the New Line
             RET
;=============================


; Send a $ terminated string to the console Pointer in DE
Con$:
             LD         BC,132               ; limit output
             EX         DE,HL

Con$1:
             LD         E,(HL)               ; Char to print
             LD         A,DOLLAR             ; terminator
             CPI                             ; at terminator ?
             RET        Z                    ; done if yes
             RET        PO                   ; done if exceed max size


             PUSH       HL
             PUSH       BC                   ; save parameters
             LD         C,ConOut
             CALL       BDOS                 ; Send to console
             POP        BC
             POP        HL

             JR         Con$1                ; loop for more
;==============================

Con00:
             LD         BC,255               ; limit output
             EX         DE,HL

Con00A:
             LD         E,(HL)               ; Char to print
             LD         A,NULL               ; terminator
             CPI                             ; at terminator ?
             RET        Z                    ; done if yes
             RET        PO                   ; done if exceed max size


             PUSH       HL
             PUSH       BC                   ; save parameters
             LD         C,ConOut
             CALL       BDOS                 ; Send to console
             POP        BC
             POP        HL

             JR         Con00A               ; loop for more
;============================================================

CmpStr:
             LD         A,(DE)               ; obtain byte from String A
             SUB        (HL)                 ; compare it to byte from String B
             RET        NZ                   ; we are done if they are not equal
             INC        DE                   ; adjust String A pointer
             INC        HL                   ; adjust String B pointer
             DJNZ       CmpStr               ; keep going if there is more
             RET                             ; return, the strings are equal
;==============================
